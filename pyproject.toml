[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "deep-research-agent"
version = "0.1.0"
description = "A deep research agent built with Streamlit and Pydantic AI"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
#hide readme for huggingface spaces'
#readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.13.2"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Framework :: Streamlit",
]
keywords = ["research", "ai", "agent", "streamlit", "pydantic"]

dependencies = [
    "ipython==9.0.2",
    "Pillow==11.2.0",
    "pydantic==2.11.2",
    "pydantic_ai==0.0.52",
    "pydantic_graph==0.0.52",
    "python-dotenv==1.1.0",
    "Requests==2.32.3",
    "Spire.Doc.Free==12.12.0",
    "tavily_python==0.5.1",
    "tabulate==0.9.0",
    "pandas==2.2.3",
    "streamlit==1.44.1",
    "nest_asyncio==1.6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.991",
]

[project.urls]
Homepage = "https://github.com/yourusername/deep-research-agent"
Repository = "https://github.com/yourusername/deep-research-agent"
Documentation = "https://github.com/yourusername/deep-research-agent#readme"
Issues = "https://github.com/yourusername/deep-research-agent/issues"

[project.scripts]
deep-research-agent = "deep_research_agent.app:main"

# uv configuration
[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.991",
]

[tool.uv.sources]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# MyPy configuration
[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short" 